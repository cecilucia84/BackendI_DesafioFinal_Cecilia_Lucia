<h1>Lista de productos</h1>
<ul>
  {{#each products.payload}} <!-- Asegúrate de usar 'payload' si así está estructurado -->
  <li>
    <h2>{{this.title}}</h2> <!-- Cambié 'this.name' a 'this.title' -->
    <p>{{this.description}}</p>
    <p>Precio: {{this.price}}</p>
    <p>Categoría: {{this.category}}</p>
    <button onclick="addToCart('{{this._id}}')">Agregar al carrito</button>
    <a href="/products/{{this._id}}">Ver detalles</a>
  </li>
  {{/each}}
</ul>

<div>
  {{#if products.hasPrevPage}} <!-- Asegúrate de que la paginación se maneje correctamente -->
  <a href="{{products.prevLink}}">Anterior</a>
  {{/if}}
  <span>Página {{products.page}} de {{products.totalPages}}</span>
  {{#if products.hasNextPage}}
  <a href="{{products.nextLink}}">Siguiente</a>
  {{/if}}
</div>

<script>
  function addToCart(productId) {
    const cartId = '66fdb280ce811c8293e42e41'; // Cambia esto por la lógica para obtener el ID del carrito si es necesario
    // Lógica para agregar el producto al carrito
    fetch(`/api/carts/${cartId}/products/${productId}`, { // Cambié a '/api/carts/${cartId}/products/${productId}'
      method: 'PUT', // O POST dependiendo de la lógica de tu proyecto
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: 1 }) // Puedes ajustar la cantidad
    })
    .then(response => response.json())
    .then(data => {
      if (data.status === 'success') {
        alert('Producto agregado al carrito');
      } else {
        alert('Error al agregar el producto al carrito');
      }
    })
    .catch(error => {
      console.error('Error al agregar al carrito:', error);
    });
  }
</script>
